lancer le bras UR : 
cd catkin_ws 
source devel/setup.bash
#roslaunch ur_robot_driver ur10_bringup.launch robot_ip:=192.168.1.200

#catkin_ws$ roslaunch ur_robot_driver ur10_bringup.launch robot_ip:=192.168.1.101 reverse_port:=50003 script_sender_port:=50004


ROS_NAMESPACE=Arm1 roslaunch ur_robot_driver ur10_bringup.launch robot_ip:=192.168.1.101 reverse_port:=50003 script_sender_port:=50004
ROS_NAMESPACE=Arm2 roslaunch ur_robot_driver ur10_bringup.launch robot_ip:=192.168.1.102 reverse_port:=50001 script_sender_port:=50002

En cas de probleme : roslaunch ur_bringup

appuyer sur Run dans polyscope

Nouveau terminal :

//Si probleme de RoseRPY inconnu : catkin_make dans catkin_ws et source devel/setup.bash
cd Bureau/'scripts UR'/scripts_bash_campero
./stop_scaled_pos_joint_traj_controller.sh
./start_cartesian_velocity_controller.sh
#rostopic pub -1 /cartesian_velocity_control/command campero_ur_ip_controllers/PoseRPY '{id: 0, position: {x: -0.47, y: 0.49, z: 0.83}, orientation: {roll: -2.41, pitch: -0.0, yaw: -0.0}}'
rostopic pub -1 /cartesian_velocity_control/command campero_ur_ip_controllers/PoseRPY '{id: 0, position: {x: -0.3, y: 0.35, z: 0.75}, orientation: {roll: -2.21, pitch: 0.0, yaw: 1.16}}'

#repos Arm1
#rostopic pub -1 /joint_array_control/command std_msgs/Float64MultiArray 'data: [0.05, -0.27, -2.81, -1.58, 0.02, 1.40]' 
#intermediaire Arm1
#rostopic pub -1 /joint_array_control/command std_msgs/Float64MultiArray 'data: [-0.32, -1.10, -1.67, 0.21, 0.3, 0.9]' 
#travail Arm1
#rostopic pub -1 /joint_array_control/command std_msgs/Float64MultiArray 'data: [-0.65, -1.23, -1.62, 0.0, 0.6, 1.3]' 

#repos Arm2
#rostopic pub -1 /joint_array_control/command std_msgs/Float64MultiArray 'data: [0.05, -2.78, 2.71, -1.18, 0.03, 1.24]' 
#intermediaire Arm2; Pas forcement necessaire
#rostopic pub -1 /joint_array_control/command std_msgs/Float64MultiArray 'data: [0.048, -2.6, 2.2, -2.2, 0.06, 1.93]' 
#travail Arm2
#rostopic pub -1 /joint_array_control/command std_msgs/Float64MultiArray 'data: [0.26, -2.05, 1.51, -2.6, -0.3, 1.74]' 



//Bras gauche : rostopic pub -1 /cartesian_velocity_control/command campero_ur_ip_controllers/PoseRPY '{id: 0, position: {x: 0.2, y: 0.25, z: 0.33}, orientation: {roll: -1.6, pitch: 0.35, yaw: 0.03}}'


lancer le softmanbot :
roscore
rosrun softmanbot_ros softmanbot_genericPerception_node
rosrun softmanbot_ros softmanbot_genericSkilledWorkcell_node
rosrun softmanbot_ros softmanbot_genericDeformationControl_node
Launch UR10 (comment? Je me souviens plus trop... CF mail Laurent)

TODO : -il y a une etape de move to start (rostopic pub -1 /cartesian_velocity_control/command campero_ur_ip_controllers/PoseRPY '{id: 0, position: {x: -0.47, y: 0.49, z: 0.83}, orientation: {roll: -2.41, pitch: -0.0, yaw: -0.0}}')
Faire en sorte de l'integrer automatiquement a la chaine? Rajouter une lecture de la position d'origine?

Creer un roslaunch qui démarre tout ce beau monde?

Au niveau de l'UR lui meme : gerer l'arret d'urgence, le redemarrage.


Interfaçage avec un superviseur + machine d'état pour faire qqc avec un peu d'allure : Nécessite Banc de test

Première Livraison du soft : c'est presque bon pour donner une idée aux autres. A voir avec leur avancement (sur sites?)
"Presque" bon -> rajouter du superviseur; 
			  -> Full automatisation du lancement 
			  -> Remonter des erreurs au superviseur


Launch Multi bras
D'après L.L :
normalement tu dois lancer un launch de l'UR avec ce genre de commande :
roslaunch ur_robot_driver <robot_type>_bringup.launch robot_ip:=192.168.56.101

Du coup le plus simple est de le lancer dans un 'namespace' différent par bras :
ROS_NAMESPACE=bras1 roslaunch ur_robot_driver <robot_type>_bringup.launch robot_ip:=192.168.56.101
ROS_NAMESPACE=bras2 roslaunch ur_robot_driver <robot_type>_bringup.launch robot_ip:=192.168.56.102

Il ne faut pas oublier aussi de mettre en adresse ip différente par bras.

Du coup les topics seront préfixer par les noms des namespaces (ici bras1 et bras2)

Cette méthode dans un premier temps est plus simple que d'écrire un launch qui lance les deux bras en même temps (dans des namespaces différents).
Si tu souhaites malgré tout le faire, il faut entourer les commandes du launch bi-bras par : <group ns="bras1">


